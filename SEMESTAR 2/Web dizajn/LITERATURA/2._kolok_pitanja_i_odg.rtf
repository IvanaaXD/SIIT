{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fswiss HelveticaNeue;}{\f2\fnil\fcharset238 Arial;}{\f3\fswiss HelveticaNeue-Italic;}{\f4\fnil\fcharset238 Calibri;}}
{\colortbl ;\red0\green0\blue0;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\cf1\b\f0\fs22 1. \f1\lang9 Koje su preporuke za upotrebu boja i fontova na web sadr\f2\'9e\f1 aju? Navesti neke primere\f0\lang1033  \f1\lang9 dobrih\f0\lang1033  \f1\lang9 praksi?\par
\b0 Najbolje je izbegavati koriscenje obojenog teksta. Sto manje velikih slova, underline, bold itd. Konzistentna visina izmedju reci itd. Sto se tice boja, postoje kompleksna objasnjenja i razni saveti za upotrebu boja. U zavisnosti od zemlje u kojoj ce biti posecivan sajt, takodje od tipa websajta, teme... Ne treba mesati previse boja i treba sadrzaj da bude konzistentan. Boje takodje imaju \ldblquote toplinu\rdblquote , takodje na primer jarka crvena boja moze da ukaze na opasnost, a zelena na prolaz/uspeh.\par
\par
\b\f0\lang1033 2. \f1\lang9 Koja je uloga navigacije na web sajtu? Navesti primere kako organizvovati\f0\lang1033  \f1\lang9 funkcionalnu\f0\lang1033  \f1\lang9 navigaciju?\par
\b0 Uloga navigacije je da obezbedi linkove ka svim bitnim delovima sajta, a po mogucnosti da prilikom mobile view da se pretvori u meni koji se aktivira na klik. \lquote crtez mog sajta\rquote\par
\par
\b 3.\f0\lang1033  \f2\lang9\'8a\f1 ta su to \ldblquote pozivi na akciju\rdblquote  - \i\f3 Call to actions (\i0\f1 CTA)\par
\b0 To je prompt na sajtu koji kaze korisniku da treba nesto da uradi. Sign Up ili Buy Now, button ili hyperlink. Bitno da bi korisnik znao korake da odradi sta zeli.\par
\par
\b 4. Navesti neke osnovne trendove koji se koriste na modernim veb stranicama.\par
\b0 Retro fontovi, scroll animacije, horizontal scrolling, dosta multimedije, prilikom skrola otkriva se sadrzaj, tipa apple.com, jako popularne cartoon ilustracije...\par
\par
\b 5. Koji su osnovni principi \ldblquote flat design\rdblquote -a?\par
\b0 Flat design je stil dizajna koji se fokusira na minimalizam, jednostavnost i \f2\'e8\f0 istu estetiku. Osnovni principi flat designa uklju\f4\'e8uju \f0\lang1033 jednostavnost, ravne boje, minimalizam, jasne linije, tipografiju, minimalnu upotrebu efekata, jednostavne ikone i negativni prostor\par
\par
\b\f1 6. \f2\'8a\f1 ta su \ldblquote ghost buttons\rdblquote ?\par
\b0 Ghost buttons su transparentna Call to action koja se pojavljuju na web sajtovima. \par
\par
\b 7. \f2\'8a\f1 ta je JavaScript i koja mu je osnovna namena?\par
\b0 Sintaksa je slicna Javi, nema tipove podataka, nema kreiranja novih klasa, sistem dogadjaja. Moze da se koristi za front i back(node.js). Preko js mi dinamcki updateujemo content...\par
\par
\b 8. Koji su osnovni elementi za kontrolu toka u JS?\par
\b0 if, while, switch, for...\par
\par
\b 9. Koje su sli\f2\'e8\f1 nosti i razlike operatora == i === u JS?\par
\b0 Slicnost je to sto oba operatora sluze za proveru jednakosti, ali == transformise operande u isti tip pre komparacije. === provera i tip, tj ne transformise nista.\par
\par
\b 10. Opisati na koje se na\f2\'e8\f1 ine sve mogu napisati funkcije u JS?\par
\b0 Mogu se definisati sa keyword function pa telo. Moze da bude anonimna i mogu biti arrow functions.\par
\par
\b 11. \f2\'8a\f1 ta je \ldblquote function hoisting\rdblquote ? U kojim slu\f2\'e8\f1 ajevima on ne radi?\par
\b0 Function hoisting (dizanje funkcija) je svojstvo JavaScripta koje omogu\f2\'e6\f0 ava da se funkcije deklarirane pomo\f4\'e6u izjave funkcije ("Function Statement") ili konstruktora funkcije ("Function Constructor") mogu podi\'e6i (hoist) na vrh svog dosega (scope-a) prije izvr\'9aavanja koda.\f0  \f4 To zna\'e8i da se deklaracija funkcije preme\'e6e na vrh dosega, omogu\'e6avaju\'e6i vam da pozovete funkciju prije nego \'9ato je definirana u kodu.\f0  Radi samo kada je funkcija definisana sa function imeFunkcije()\par
\par
\b\f1 12. \f2\'8a\f1 ta su callback funkcije u JS?\par
\b0 Callback(high-order) funkcije su funkcije koje se prosledjuju drugim funkcijama (nazovimo tu drugu funkciju drugaFunkcija) kao parameta. Onda se callback poziva (ili izvrsava) u toj drugojFunkciji. Callback funkcija je u sustini sablon (pattern) koji predstavlja resenje za neki problem. Stoga koriscenje callbackfunkcije je poznato i kao callbackpattern\par
\par
\b 13. Da li funckije mogu biti prosle\f2\'f0\f1 ivane prilikom poziva drugih funkcija?\par
\b0\f0 Da\par
\par
\b\f1 14. Da li funkcije mogu biti povratna vrednost funkcije?\par
\b0\f0 Mogu\par
\par
\b\f1 15. \f2\'8a\f1 ta su anonimne funkcije? Kako se koriste?\par
\b0 Anonimne funkcije su funkcije bez imena, one su sacuvane u promenljivoj. Zovu se pozivom varijable. Koriste se na primer kada nam treba neko izvrsavanje koda na jednom mestu i nikada vise. Na primer \par
var x = function (a, b) \{return a * b\};\par
var z = x(4, 3);\par
\par
\b 16. \f2\'8a\f1 ta su samopozivaju\f2\'e6\f1 e funkcije?\par
\b0 Samopozivaju\f2\'e6\f0 e funkcije (self-invoking functions) su funkcije koje se automatski izvr\f4\'9aavaju odmah nakon svoje definicije, bez eksplicitnog poziva. Ove funkcije se tako\'f0er nazivaju i odmah izvr\'9aavane funkcije (Immediately Invoked Function Expressions - IIFE).\par
\par
\b\f1 17. JavaScript objekti - \f2\'9a\f1 ta su, kako se koriste i kako ih je sve mogu\f2\'e6\f1 e kreirati?\par
\b0 JavaScript objekti su slo\f2\'9e\f0 eni podaci koji mogu sadr\f4\'9eavati svojstva (properties) i metode (methods). Objekti se koriste za organiziranje i manipuliranje podacima na strukturiran na\'e8in.\f0  Moguce ih je kreirati kao objektnu literalnu sintaksu koja se sastoji od \{\}; upotrebom konstruktora objekta; i preko objektne metode Object.create().\par
\par
\b\f1 18. \f2\'8a\f1 ta je DOM i \f2\'e8\f1 emu se preko njega pristupa iz JavaScripta?\par
\b0 Document Object Model. Definise HTML elemente kao objekte, osobine svih html elemenata, metode za pristup njima i dogadjaje svih elemenata. Pristupamo sadrzaju iz htmla.\par
\par
\b 19. \f2\'8a\f1 ta je ES6? Koje su neke od najbitnijih izmena u odnosu na prethodni standard?\par
\b0 ECMAScript 6 ili ECMAScript 2015 je druga velika revizija JS. Dodato je let, const, arrow functions, class, promise, array.find()...\par
\par
\b 20. Koja je uloga \i\f3 let \i0\f1 i \i\f3 const \i0\f1 u JavaScriptu?\par
\b0 Const I Let su ES6 Inovacije koje sluze za block variable definiciju, const je konstanta, let je promenljiva\par
\par
\b 21. \f2\'8a\f1 ta je \ldblquote arrow function\rdblquote  notacija?\par
\b0 Arrow funkcija nema argumente, nije pogodna za call, apply i bind metode, ne moze se koristiti kao konstruktor ali je dosta cistije i preferiran nacin za pravljanje vecine funkcija u npr React.\par
\par
\b 22. \f2\'c8\f1 emu slu\f2\'9e\f1 i destrukturisanje?\par
\b0 Pojam podrazumeva \ldblquote izvlacenje\rdblquote  podataka iz strukture podataka (objekat ili niz) i pravljenje novih manjih struktura kojima se dodeljuju vrednosti na osnovu \ldblquote izvucenih\rdblquote  podataka.\par
\par
\b 23. Kako se koristi \ldblquote rest pattern\rdblquote  za parametre funkcija?\b0\par
Rest pattern je sintakti\f2\'e8\f0 ki element u JavaScriptu koji se koristi prilikom definiranja parametara funkcije kako bi se omogu\f4\'e6ila prihvat varijabilnog broja argumenata kao niza.\b\f1\par
\par
24. Kako se koristi spread operator?\par
\b0 Koristi se da bi unpackovali npr array. Koristimo ovako:\par
let greetings = "hello";\par
let chars = [...greetings];\par
console.log(chars);\par
\par
\b 25. Kako se obezbe\f2\'f0\f1 uje podr\f2\'9a\f1 ka za razvoj koda u modulima?\par
\b0 Modul je samo fajl. Sluze da bi veliki kod rastavili na vise delova. Moduli mogu da ucitavaju jedni druge uz pomoc export i import. Import direktiva ucitava putanju do nekog .js fajla. Potrebno je dodati <script type="module">. U modulima kod je izvrsen samo jednom.\par
\par
\b 26. \f2\'8a\f1 ta je osnovna ideja kori\f2\'9a\'e6\f1 enja Promise objekata?\par
\b0 Osnovna ideja kori\f2\'9a\'e6\f0 enja Promise objekata u JavaScriptu je omogu\f4\'e6avanje asinkronog programiranja i efikasnog rukovanja vremenom zasnovanim operacijama poput asinhronih poziva API-ja, obrade datoteka ili \'e8ekanja na rezultate baza podataka.\f0  \f4 Promise objekt predstavlja obe\'e6anje (promise) da \'e6e se izvr\'9aiti odre\'f0ena operacija i vratiti rezultat u budu\'e6nosti. Taj rezultat mo\'9ee biti uspeh (resolve) ili gre\'9aka (reject). Na taj na\'e8in, Promise pru\'9ea elegantan na\'e8in za rukovanje asinhronim operacijama bez da blokira izvr\'9aenje ostatka koda.\par
\par
\b\f1 27. Koja stanja mo\f2\'9e\f1 e da ima Promise object?\par
\b0 Promise ima neko od tri stanja: pending, fulfilled ili rejected. Predstavlja zavrsetak asinhrone operacije i njen rezultat\par
\par
\b 28. \f2\'8a\f1 ta je AJAX i \f2\'9a\f1 ta je mogu\f2\'e6\f1 e pomo\f2\'e6\f1 u njega izvr\f2\'9a\f1 iti iz JavaScripta?\par
\b0 Asynchronous JavaScript And XML, dozvoljava da se stranice asinhrono osveze tako sto razmenjuju podatke sa web serverom iza scene. Znaci mozemo da menjamo sadrzaj bez da ucitavamo opet. Mozemo koristiti $.get(), $.post(), and $.load().\par
\par
\b 29. \f2\'8a\f1 ta je XMLHttpRequest i kako se koristi?\par
\b0 XMLHttpRequest (XHR) je objekat u JavaScriptu koji se koristi za izvr\f2\'9a\f0 avanje asinhronih HTTP zahteva prema serveru i dobijanje podataka u pozadini bez potrebe za osve\f4\'9eavanjem cele stranice. Ovaj objekat omogu\'e6ava komunikaciju izme\'f0u klijentske i serverske strane i omogu\'e6ava razmenu podataka u razli\'e8itim formatima kao \'9ato su tekst, JSON, XML i drugi.\par
\par
\b\f1 30. \f2\'8a\f1 ta je Fetch API i \f2\'e8\f1 emu slu\f2\'9e\f1 i?\par
\b0 Fetch API je moderni standardni JavaScript API koji omogu\f2\'e6\f0 ava jednostavno izvr\f4\'9aavanje asinhronih HTTP zahteva prema serveru i upravljanje odgovorima. On pru\'9ea jednostavno su\'e8elje za slanje zahteva i manipulaciju podacima koji se dobijaju sa servera.\par
Fetch API koristi se za slanje HTTP zahteva uklju\'e8uju\'e6i GET, POST, PUT, DELETE i druge HTTP metode. Mo\'9ee se koristiti za dobijanje podataka u razli\'e8itim formatima kao \'9ato su tekst, JSON, XML i druge.\par
\par
\b\f1 31. Da li Fetch API koristi Promise objecte i kako?\par
\b0 Da, Fetch API koristi Promise objekte za rukovanje asinhronim zahtevima i odgovorima. Fetch funkcija vra\f2\'e6\f0 a Promise objekat koji se mo\f4\'9ee dalje rukovati pomo\'e6u metoda then(), catch() i drugih metoda koje Promise objekat pru\'9ea.\par
\par
\b\f1 32. \f2\'8a\f1 ta je SEO i za\f2\'9a\f1 to je zna\f2\'e8\f1 ajno posvetiti vreme i ovom problemu?\par
\b0 Search Engine Optimization. Kvalitet saobracaja, kolicina saobracaja, rezultati. Znacajno je jer je bitno da se nas sajt naravno uz relevantnu pretragu pojavi u google search na prvoj ili eventualno drugoj strani. Postoje naravno i opcije placen advertising, social media... ali je uglavnom najbitniji SEO.\b\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\cf0\f0\lang9\par
}
 